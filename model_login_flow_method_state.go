/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// LoginFlowMethodState struct for LoginFlowMethodState
type LoginFlowMethodState struct {
	Initialized *bool `json:"initialized,omitempty"`
}

// NewLoginFlowMethodState instantiates a new LoginFlowMethodState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginFlowMethodState() *LoginFlowMethodState {
	this := LoginFlowMethodState{}
	return &this
}

// NewLoginFlowMethodStateWithDefaults instantiates a new LoginFlowMethodState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginFlowMethodStateWithDefaults() *LoginFlowMethodState {
	this := LoginFlowMethodState{}
	return &this
}

// GetInitialized returns the Initialized field value if set, zero value otherwise.
func (o *LoginFlowMethodState) GetInitialized() bool {
	if o == nil || o.Initialized == nil {
		var ret bool
		return ret
	}
	return *o.Initialized
}

// GetInitializedOk returns a tuple with the Initialized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginFlowMethodState) GetInitializedOk() (*bool, bool) {
	if o == nil || o.Initialized == nil {
		return nil, false
	}
	return o.Initialized, true
}

// HasInitialized returns a boolean if a field has been set.
func (o *LoginFlowMethodState) HasInitialized() bool {
	if o != nil && o.Initialized != nil {
		return true
	}

	return false
}

// SetInitialized gets a reference to the given bool and assigns it to the Initialized field.
func (o *LoginFlowMethodState) SetInitialized(v bool) {
	o.Initialized = &v
}

func (o LoginFlowMethodState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Initialized != nil {
		toSerialize["initialized"] = o.Initialized
	}
	return json.Marshal(toSerialize)
}

type NullableLoginFlowMethodState struct {
	value *LoginFlowMethodState
	isSet bool
}

func (v NullableLoginFlowMethodState) Get() *LoginFlowMethodState {
	return v.value
}

func (v *NullableLoginFlowMethodState) Set(val *LoginFlowMethodState) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginFlowMethodState) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginFlowMethodState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginFlowMethodState(val *LoginFlowMethodState) *NullableLoginFlowMethodState {
	return &NullableLoginFlowMethodState{value: val, isSet: true}
}

func (v NullableLoginFlowMethodState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginFlowMethodState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


