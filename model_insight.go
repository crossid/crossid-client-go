/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
	"time"
)

// Insight struct for Insight
type Insight struct {
	Actions *[]InsightActions `json:"actions,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Id *string `json:"id,omitempty"`
	InsightId *string `json:"insightId,omitempty"`
	InsightModelType *string `json:"insightModelType,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Meta *ApiTokenMeta `json:"meta,omitempty"`
	ModelIds *[]string `json:"modelIds,omitempty"`
	Payload interface{} `json:"payload,omitempty"`
	ReadBy *[]string `json:"readBy,omitempty"`
	Severity *int64 `json:"severity,omitempty"`
	SnoozeUntil *time.Time `json:"snoozeUntil,omitempty"`
	Status *string `json:"status,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
}

// NewInsight instantiates a new Insight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsight() *Insight {
	this := Insight{}
	return &this
}

// NewInsightWithDefaults instantiates a new Insight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsightWithDefaults() *Insight {
	this := Insight{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *Insight) GetActions() []InsightActions {
	if o == nil || o.Actions == nil {
		var ret []InsightActions
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetActionsOk() (*[]InsightActions, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *Insight) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []InsightActions and assigns it to the Actions field.
func (o *Insight) SetActions(v []InsightActions) {
	o.Actions = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Insight) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Insight) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Insight) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Insight) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Insight) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Insight) SetId(v string) {
	o.Id = &v
}

// GetInsightId returns the InsightId field value if set, zero value otherwise.
func (o *Insight) GetInsightId() string {
	if o == nil || o.InsightId == nil {
		var ret string
		return ret
	}
	return *o.InsightId
}

// GetInsightIdOk returns a tuple with the InsightId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetInsightIdOk() (*string, bool) {
	if o == nil || o.InsightId == nil {
		return nil, false
	}
	return o.InsightId, true
}

// HasInsightId returns a boolean if a field has been set.
func (o *Insight) HasInsightId() bool {
	if o != nil && o.InsightId != nil {
		return true
	}

	return false
}

// SetInsightId gets a reference to the given string and assigns it to the InsightId field.
func (o *Insight) SetInsightId(v string) {
	o.InsightId = &v
}

// GetInsightModelType returns the InsightModelType field value if set, zero value otherwise.
func (o *Insight) GetInsightModelType() string {
	if o == nil || o.InsightModelType == nil {
		var ret string
		return ret
	}
	return *o.InsightModelType
}

// GetInsightModelTypeOk returns a tuple with the InsightModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetInsightModelTypeOk() (*string, bool) {
	if o == nil || o.InsightModelType == nil {
		return nil, false
	}
	return o.InsightModelType, true
}

// HasInsightModelType returns a boolean if a field has been set.
func (o *Insight) HasInsightModelType() bool {
	if o != nil && o.InsightModelType != nil {
		return true
	}

	return false
}

// SetInsightModelType gets a reference to the given string and assigns it to the InsightModelType field.
func (o *Insight) SetInsightModelType(v string) {
	o.InsightModelType = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *Insight) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *Insight) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *Insight) SetKind(v string) {
	o.Kind = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *Insight) GetMeta() ApiTokenMeta {
	if o == nil || o.Meta == nil {
		var ret ApiTokenMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetMetaOk() (*ApiTokenMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Insight) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ApiTokenMeta and assigns it to the Meta field.
func (o *Insight) SetMeta(v ApiTokenMeta) {
	o.Meta = &v
}

// GetModelIds returns the ModelIds field value if set, zero value otherwise.
func (o *Insight) GetModelIds() []string {
	if o == nil || o.ModelIds == nil {
		var ret []string
		return ret
	}
	return *o.ModelIds
}

// GetModelIdsOk returns a tuple with the ModelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetModelIdsOk() (*[]string, bool) {
	if o == nil || o.ModelIds == nil {
		return nil, false
	}
	return o.ModelIds, true
}

// HasModelIds returns a boolean if a field has been set.
func (o *Insight) HasModelIds() bool {
	if o != nil && o.ModelIds != nil {
		return true
	}

	return false
}

// SetModelIds gets a reference to the given []string and assigns it to the ModelIds field.
func (o *Insight) SetModelIds(v []string) {
	o.ModelIds = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Insight) GetPayload() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Insight) GetPayloadOk() (*interface{}, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return &o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *Insight) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given interface{} and assigns it to the Payload field.
func (o *Insight) SetPayload(v interface{}) {
	o.Payload = v
}

// GetReadBy returns the ReadBy field value if set, zero value otherwise.
func (o *Insight) GetReadBy() []string {
	if o == nil || o.ReadBy == nil {
		var ret []string
		return ret
	}
	return *o.ReadBy
}

// GetReadByOk returns a tuple with the ReadBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetReadByOk() (*[]string, bool) {
	if o == nil || o.ReadBy == nil {
		return nil, false
	}
	return o.ReadBy, true
}

// HasReadBy returns a boolean if a field has been set.
func (o *Insight) HasReadBy() bool {
	if o != nil && o.ReadBy != nil {
		return true
	}

	return false
}

// SetReadBy gets a reference to the given []string and assigns it to the ReadBy field.
func (o *Insight) SetReadBy(v []string) {
	o.ReadBy = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *Insight) GetSeverity() int64 {
	if o == nil || o.Severity == nil {
		var ret int64
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetSeverityOk() (*int64, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *Insight) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given int64 and assigns it to the Severity field.
func (o *Insight) SetSeverity(v int64) {
	o.Severity = &v
}

// GetSnoozeUntil returns the SnoozeUntil field value if set, zero value otherwise.
func (o *Insight) GetSnoozeUntil() time.Time {
	if o == nil || o.SnoozeUntil == nil {
		var ret time.Time
		return ret
	}
	return *o.SnoozeUntil
}

// GetSnoozeUntilOk returns a tuple with the SnoozeUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetSnoozeUntilOk() (*time.Time, bool) {
	if o == nil || o.SnoozeUntil == nil {
		return nil, false
	}
	return o.SnoozeUntil, true
}

// HasSnoozeUntil returns a boolean if a field has been set.
func (o *Insight) HasSnoozeUntil() bool {
	if o != nil && o.SnoozeUntil != nil {
		return true
	}

	return false
}

// SetSnoozeUntil gets a reference to the given time.Time and assigns it to the SnoozeUntil field.
func (o *Insight) SetSnoozeUntil(v time.Time) {
	o.SnoozeUntil = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Insight) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Insight) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Insight) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Insight) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Insight) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Insight) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Insight) SetTags(v []string) {
	o.Tags = &v
}

func (o Insight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InsightId != nil {
		toSerialize["insightId"] = o.InsightId
	}
	if o.InsightModelType != nil {
		toSerialize["insightModelType"] = o.InsightModelType
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.ModelIds != nil {
		toSerialize["modelIds"] = o.ModelIds
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.ReadBy != nil {
		toSerialize["readBy"] = o.ReadBy
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.SnoozeUntil != nil {
		toSerialize["snoozeUntil"] = o.SnoozeUntil
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableInsight struct {
	value *Insight
	isSet bool
}

func (v NullableInsight) Get() *Insight {
	return v.value
}

func (v *NullableInsight) Set(val *Insight) {
	v.value = val
	v.isSet = true
}

func (v NullableInsight) IsSet() bool {
	return v.isSet
}

func (v *NullableInsight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsight(val *Insight) *NullableInsight {
	return &NullableInsight{value: val, isSet: true}
}

func (v NullableInsight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


