/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// InsightActions struct for InsightActions
type InsightActions struct {
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewInsightActions instantiates a new InsightActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsightActions() *InsightActions {
	this := InsightActions{}
	return &this
}

// NewInsightActionsWithDefaults instantiates a new InsightActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsightActionsWithDefaults() *InsightActions {
	this := InsightActions{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InsightActions) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsightActions) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InsightActions) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InsightActions) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InsightActions) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsightActions) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InsightActions) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InsightActions) SetId(v string) {
	o.Id = &v
}

func (o InsightActions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInsightActions struct {
	value *InsightActions
	isSet bool
}

func (v NullableInsightActions) Get() *InsightActions {
	return v.value
}

func (v *NullableInsightActions) Set(val *InsightActions) {
	v.value = val
	v.isSet = true
}

func (v NullableInsightActions) IsSet() bool {
	return v.isSet
}

func (v *NullableInsightActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsightActions(val *InsightActions) *NullableInsightActions {
	return &NullableInsightActions{value: val, isSet: true}
}

func (v NullableInsightActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsightActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


